{"version":3,"sources":["components/Business/Business.js","components/BusinessList/BusinessList.js","components/SearchBar/SearchBar.js","util/Yelp.js","App.js","serviceWorker.js","index.js"],"names":["Business","business","this","props","react_default","a","createElement","className","src","imageSrc","alt","name","address","city","state","zipCode","category","rating","reviewCount","React","Component","BusinessList","businesses","map","components_Business_Business","key","id","sortByOptions","Best Match","Highest Rated","Most Reviewed","SearchBar","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","term","location","sortBy","handleTermChange","bind","assertThisInitialized","handleLocationChange","handleSearch","sortByOption","setState","event","target","value","searchYelp","preventDefault","_this2","keys","sortByOptionValue","getSortByClass","onClick","handleSortByChange","renderSortByOptions","placeholder","onChange","Yelp","fetch","concat","headers","Authorization","then","response","json","jsonResponse","image_url","address1","zip_code","categories","title","review_count","App","components_SearchBar_SearchBar","components_BusinessList_BusinessList","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.07923456.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Business.css';\r\n\r\nclass Business extends React.Component {\r\n    render(){\r\n        const { business } = this.props;\r\n        return(\r\n            <div className=\"Business\">\r\n            <div className=\"image-container\">\r\n                <img src={business.imageSrc} alt=''/>\r\n            </div>\r\n            <h2>{business.name}</h2>\r\n            <div className=\"Business-information\">\r\n                <div className=\"Business-address\">\r\n                <p>{business.address}</p>\r\n                <p>{business.city}</p>\r\n                <p>{business.state}, {business.zipCode}</p>\r\n                </div>\r\n                <div className=\"Business-reviews\">\r\n                <h3>{business.category}</h3>\r\n                <h3 className=\"rating\">{business.rating}</h3>\r\n                <p>{business.reviewCount}</p>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Business;","import React from 'react';\r\nimport './BusinessList.css';\r\nimport Business from '../Business/Business';\r\n\r\nclass BusinessList extends React.Component {\r\n    render(){\r\n        return(\r\n            <div className=\"BusinessList\">\r\n                {\r\n                    this.props.businesses.map((business) => {\r\n                        return <Business business={business} key={business.id} />\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BusinessList;","import React from 'react';\r\nimport './SearchBar.css';\r\n\r\nconst sortByOptions = {\r\n    'Best Match': 'best_match',\r\n    'Highest Rated': 'rating',\r\n    'Most Reviewed': 'review_count'\r\n};\r\n\r\n\r\nclass SearchBar extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n           term: '',\r\n           location: '',\r\n           sortBy: 'best_match'\r\n        }\r\n\r\n        this.handleTermChange = this.handleTermChange.bind(this);\r\n        this.handleLocationChange = this.handleLocationChange.bind(this);\r\n        this.handleSearch = this.handleSearch.bind(this);\r\n    }\r\n\r\n    getSortByClass(sortByOption){\r\n        if(this.state.sortBy === sortByOption){\r\n            return 'active';\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    handleSortByChange(sortByOption){\r\n        this.setState({\r\n            sortBy: sortByOption\r\n        });\r\n    }\r\n\r\n    handleTermChange(event){\r\n        this.setState({\r\n            term: event.target.value\r\n        });\r\n    }\r\n\r\n    handleLocationChange(event){\r\n        this.setState({\r\n           location: event.target.value \r\n        });\r\n    }\r\n\r\n    handleSearch(event) {\r\n        this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\r\n        event.preventDefault();\r\n    }\r\n\r\n    renderSortByOptions() {\r\n        return Object.keys(sortByOptions).map(sortByOption => {\r\n            let sortByOptionValue = sortByOptions[sortByOption];\r\n            return <li key={sortByOptionValue} className={this.getSortByClass(sortByOptionValue)} onClick={this.handleSortByChange.bind(this, sortByOptionValue)}>{sortByOption}</li>\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"SearchBar\">\r\n            <div className=\"SearchBar-sort-options\">\r\n                <ul>\r\n                {this.renderSortByOptions()}\r\n                </ul>\r\n            </div>\r\n            <div className=\"SearchBar-fields\">\r\n                <input placeholder=\"Search Businesses\" onChange={this.handleTermChange} />\r\n                <input placeholder=\"Where?\" onChange={this.handleLocationChange} />\r\n            </div>\r\n            <div className=\"SearchBar-submit\">\r\n                <a onClick={this.handleSearch}>Let's Go</a>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBar;","const apiKey = '5O4ZwtNcYBSJGKbxpGsYWcKMSMPmPM3WQtdaHwUOYSzoQQGOLBfj_F28P3Hyij8KSz0rtNjChWKiT1pAdXckc81zvzhqx2sIHwPl5xuMUXH0kjKpOwHpKb9oXE-FXHYx';\r\n\r\nconst Yelp = {\r\n    searchYelp(term, location, sortBy) {\r\n        return fetch(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${apiKey}`\r\n            },\r\n        }).then((response) => {\r\n            return response.json();\r\n        }).then((jsonResponse) => {\r\n            if(jsonResponse.businesses){\r\n                return jsonResponse.businesses.map((business) => {\r\n                    return {\r\n                        id: business.id,\r\n                        imageSrc: business.image_url,\r\n                        name: business.name,\r\n                        address: business.location.address1,\r\n                        city: business.location.city,\r\n                        state: business.location.state,\r\n                        zipCode: business.location.zip_code,\r\n                        category: business.categories[0].title,\r\n                        rating: business.rating,\r\n                        reviewCount: business.review_count,\r\n\r\n                    };\r\n                });\r\n            }\r\n        })\r\n    }\r\n};\r\n\r\nexport default Yelp;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport BusinessList from './components/BusinessList/BusinessList';\r\nimport SearchBar from './components/SearchBar/SearchBar';\r\nimport Yelp from './util/Yelp';\r\n\r\n\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      businesses: [],\r\n    };\r\n\r\n    this.searchYelp = this.searchYelp.bind(this);\r\n  }\r\n  searchYelp(term, location, sortBy) {\r\n    Yelp.searchYelp(term, location, sortBy).then((businesses) => {\r\n      this.setState({ businesses: businesses});\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>ravenous</h1>\r\n        <SearchBar searchYelp={this.searchYelp}/>\r\n        <BusinessList businesses={this.state.businesses} /> \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}